// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using AUT03_01_Jardineria.Models;
using AUT03_01_Jardineria.Models.Auth;
using Microsoft.EntityFrameworkCore;

namespace AUT03_01_Jardineria.Data;

public partial class JardineriaContext : DbContext
{
    public JardineriaContext(DbContextOptions<JardineriaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<gama_producto> Gamas { get; set; }

    public virtual DbSet<Producto> Productos { get; set; }

    // TODO: Seeding Reviews

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<gama_producto>().ToTable(nameof(gama_producto), t => t.ExcludeFromMigrations());
        modelBuilder.Entity<Producto>().ToTable(nameof(Producto), t => t.ExcludeFromMigrations());

        modelBuilder.Entity<gama_producto>(entity =>
        {
            entity.HasKey(e => e.gama).HasName("PK__gama_pro__4877EEE4998666B4");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.codigo_producto).HasName("PK__producto__105107A934D97F41");

            entity.Property(e => e.precio_proveedor).HasDefaultValueSql("(NULL)");
            entity.Property(e => e.proveedor).HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.gamaNavigation).WithMany(p => p.productos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__producto__gama__3D5E1FD2");
        });

        // REVIEWS SEEDING
        List<Review> reviews = new List<Review>()
        {
            new Review()
            {
                ReviewId = 1,
                Title = "Está ok",
                Description = "Sirve",
                Stars = 4,
                ProductId = 1,
                UserId = null
            },
            new Review()
            {
                ReviewId = 2,
                Title = "Regulero",
                Description = "Me hice pupa",
                Stars = 3,
                ProductId = 1,
                UserId = null
            },
            new Review()
            {
                ReviewId = 3,
                Title = "Maravilloso",
                Description = "Super divino de la muerte",
                Stars = 5,
                ProductId = 1,
                UserId = null
            },
            new Review()
            {
                ReviewId = 4,
                Title = "Pequeña",
                Description = "Ta chiquita",
                Stars = 2,
                ProductId = 179,
                UserId = null
            },
            new Review()
            {
                ReviewId = 5,
                Title = "Perfecto",
                Description = "Justo lo que necesitaba",
                Stars = 5,
                ProductId = 179,
                UserId = null
            },
            new Review()
            {
                ReviewId = 6,
                Title = "Preciosas",
                Description = "Encajan perfectamente en mi jardín",
                Stars = 5,
                ProductId = 179,
                UserId = null
            }
        };
        modelBuilder.Entity<Review>().HasData(reviews);

        modelBuilder.Entity<Review>()
            .HasOne(r => r.Producto)
            .WithMany(r => r.reviews)
            .HasForeignKey(r => r.ProductId);

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

public DbSet<AUT03_01_Jardineria.Models.Review> Review { get; set; } = default!;
}